from Crypto.PublicKey import RSA

from Crypto.Util.number import inverse

import base64

e = 31186400897019474935110647285445503673131446580681275776311671951414114788622345838774311877965990786720764658784947421898983517760738477784602362371051561562206808351224503093181667456617648598165647915091757078611302190825934535904283579772712691438112230134828980258111970295516689690256373292215340475163958923723790536805165847711775268441953305309821252180479573636847217520184023025127620891001593596764466667387987683667801953315782130313468664428515728986226452261450588569245373362702725469848655817202090205940445626402571508469590603334162227644680600619967899413710405809040986903674088539812272861821091

n= 65600461780989803766848392425426887870434366488494962966900808777432584484088221195303017908185765416426865541330492621828385095208401835694398180740583580467731175837961973916562100612373134902716587868046427380223327738540114777241641014871790815133235867909646828092331690444703436170746272569822738659402858823786521460740789564170287308513292418939316054128834222945338106076073139265530198099998748944323883371406422653204889570690803132164330855565516333393423122237578933112127930186731899656475860444002021681839995303291028010312901432208049210885186720776201994911765956299022808044735625894648965241701539

p= 240235037993086647490360091251920509660926008787784163933134217892938306866733942789677346753386227305733054945882967240289722901543973488715609201686292184661845932338700104193843036687863902362262743558762135191383008370605906319072352806840967443808455667223189470493469726348267326087313303773058894562037

q= 273067835270880086905225991495379768025497181071655465691068234751894433419924689398578343149876505032891110212422075482294849988417876098468455656340271714411918145829343178315564694346337087829483997746033122936265729805143582391157953230943745740375876718066059315171626227510845447370568918599985468283447

# phi is Ï†(n) = (p - 1) * (q - 1)
phi = (p - 1) * (q - 1)

# d is the inverse of e mod phi
d = inverse(e, phi)

# Generating a private key
key = RSA.construct((n, e, d, p, q))

# file name
fn = "privatekey.pem"

# Storing key in a file
with open(fn, "wb") as f:
    f.write(key.exportKey())
